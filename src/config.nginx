##
# Servidores OSM.CODES
##

# Define upstreams
# PRODUCAO: dl05s_main em :3105
upstream prod_backend {
    server 127.0.0.1:3105;
}

upstream test_backend {
    server 127.0.0.1:3106;
}

# PRODUCAO
server {
    server_name osm.codes www.osm.codes afa.codes www.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    root /var/www/osm.codes/;
    index index.php index.html index.htm;
    access_log /var/log/nginx/osm.codes.access_log;
    error_log  /var/log/nginx/osm.codes.error.log;

    # schema api, deve migrar para api.osm.codes
    ## return csv
    location /_sql.csv {
        rewrite /_sql.csv/(.*) /$1 break;

        proxy_set_header Accept 'text/csv';
        proxy_pass http://prod_backend;
    }

    ## return json default postgrest
        location /_sql {
        rewrite ^/_sql/(.*) /$1 break;

        proxy_pass http://prod_backend;
    }

    # encode logistics
    location ~* "^/geo:\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json(/[a-z]{2}-[a-z0-9]{1,3}-[a-z0-9]+)?$" {
        ### sem grid
        rewrite "^/(geo:.*);(u=.*)\.json$"      "/rpc/osmcode_encode?uri=$1%3B$2&grid=0" break;
        rewrite "^/(geo:.*)\.json$"             "/rpc/osmcode_encode?uri=$1&grid=0" break;
        rewrite "^/(geo:.*);(u=.*)\.json/(.+)$" "/rpc/osmcode_encode_postal?uri=$1%3B$2&grid=0&p_isolabel_ext=$3" break;
        rewrite "^/(geo:.*)\.json/(.+)$"        "/rpc/osmcode_encode_postal?uri=$1&grid=0&p_isolabel_ext=$2" break;
        proxy_pass http://prod_backend;
    }

    # encode scientific
    location ~* "^/geo:\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json/base16(h|h1c)?(/grid(2|4|8|16|3|5|9|17))?(/[a-z]{2})?$" {
        # com grid
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/grid(\d+)$"      "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=$4" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/grid(\d+)$"             "/rpc/osmcode_encode_scientific?uri=$1&grid=$3" break;
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/grid(\d+)/(.+)$" "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=$4&p_isolabel_ext=$5" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/grid(\d+)/(.+)$"        "/rpc/osmcode_encode_scientific?uri=$1&grid=$3&p_isolabel_ext=$4" break;

        # sem grid
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?$"                "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=0" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?$"                       "/rpc/osmcode_encode_scientific?uri=$1&grid=0" break;
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/(.+)$"           "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=0&p_isolabel_ext=$4" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/(.+)$"                  "/rpc/osmcode_encode_scientific?uri=$1&grid=0&p_isolabel_ext=$3" break;

        proxy_pass http://prod_backend;
    }

    # decode
    location ~* "^/geo:afa:([a-z]{2})(~|\+)([a-z0-9,\{\}\.]+)\.json$" {
        rewrite "(?i)^/geo:afa:(BR|UY)\+(.*)\.json$"     /rpc/osmcode_decode_scientific_absolute?p_code=$2&p_iso=$1&p_base=18 break; # scientific absoluto 16h1c
        rewrite "(?i)^/geo:afa:([a-z]{2})\+(.*)\.json$"  /rpc/osmcode_decode_scientific_absolute?p_code=$2&p_iso=$1&p_base=16 break; # scientific absoluto 16h
        rewrite "(?i)^/geo:afa:([a-z]{2})~(.*)\.json$"   /rpc/osmcode_decode_postal?p_code=$2&p_iso=$1 break;                        # logistic absoluto
        proxy_pass http://prod_backend;
    }

    # decode logistic reduzido (CO-ANT-Itagui, CO-A-Itagui) divipola/ibgegeocodigo/cmcode
    location ~* "^/(geo:afa:)?(([a-z]{2}((-[a-z0-9]+){1,2})))(~|-)([a-z0-9]+)\.json$" {
        rewrite "(?i)^/(geo:afa:)?(.+)(~|-)(.+)\.json$" /rpc/osmcode_decode_postal?p_code=$4&p_iso=$2 break;
        proxy_pass http://prod_backend;
    }

    # geo:iso_ext
    location ~* "^/(geo:iso_ext:)?([a-z]{2}((-[a-z0-9]+){0,2}))\.json(/cover(/base16h(1c)?)?)?$" {
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json$" /rpc/jurisdiction_geojson_from_isolabel?p_code=$2 break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover$"           /rpc/jurisdiction_coverage?p_iso=$2           break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover/base16h$"   /rpc/jurisdiction_coverage?p_iso=$2&p_base=16 break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover/base16h1c$" /rpc/jurisdiction_coverage?p_iso=$2&p_base=18 break;
        proxy_pass http://prod_backend;
    }

    # geo:iso_ext2
    location ~* "^/(geo:iso_ext2:)?([a-z]{2}((-[a-z0-9]+){0,2}))\.json$" {
        rewrite "(?i)^/(geo:iso_ext2:)?(.+)\.json$" /rpc/jurisdiction_geojson_from_isolabel2?p_code=$2 break;
        proxy_pass http://prod_backend;
    }

    # geo:co-divipola|br-geocodigo
    location ~* "^/(geo:(co-divipola|br-geocodigo|cm-code):[0-9]+)\.json(/cover(/base16h(1c)?)?)?$" {
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json$"                 /rpc/jurisdiction_geojson_from_isolabel?p_code=$1$3 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover$"           /rpc/jurisdiction_coverage?p_iso=$1$3 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover/base16h$"   /rpc/jurisdiction_coverage?p_iso=$1$3&p_base=16 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover/base16h1c$" /rpc/jurisdiction_coverage?p_iso=$1$3&p_base=18 break;
        proxy_pass http://prod_backend;
    }

    # (urn|geo):lex
    location ~* "^/(urn|geo):lex:([a-z]{2}(;[a-z0-9\.]+)?(;[a-z0-9\.]+)?)\.json(/cover/base16h(1c)?)?$" {
        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z\.]+)\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3%3B$4  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3%3B$4  break;


        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z0-9\.]+)\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=16  break;


        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z0-9\.]+)\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=18  break;

        proxy_pass http://prod_backend;
    }

    # ENCODE OLC|GHS
    location ~* "^/geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json$" {

        rewrite "^/(geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*);(u=\d+\.?\d*)\.json$"
            "/rpc/$2_encode?uri=$1%3B$3" break;

        rewrite "^/(geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*)\.json$"
            "/rpc/$2_encode?uri=$1" break;

        proxy_pass http://prod_backend;
    }

    # DECODE GHS
    location ~* "^/geo:ghs:([0123456789BCDEFGHJKMNPQRSTUVWXYZ]+).json$" {
        rewrite "(?i)^/geo:ghs:(.*).json$" "/rpc/ghs_decode?code=$1" break;
        proxy_pass http://prod_backend;
    }

    # DECODE OLC
    location ~* "^/geo:olc:(([23456789CFGHJMPQRVWX]+0*){1,8}\+([23456789CFGHJMPQRVWX]+)?).json$" {
        rewrite "(?i)^/geo:olc:([^\.]+).json$" "/rpc/olc_decode?code=$1" break;
        proxy_pass http://prod_backend;
    }

    ## leaflet
    ###
    location ~* "^/(BR|CM)((-[a-z]{2})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }
    location ~* "^/CO((-[a-z]{3})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }

    ### reduzido divipola/ibgegeocodigo 32
    location ~* "^/(geo:)?(BR|CM|CO|UY)((-[a-z0-9]{2,})(-[a-z0-9]{2,})?)((~|-)[a-z0-9\.]+)?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    location ~* "^/[a-z]{2}((-[a-z0-9]{3,}){1,2})((~|-)[a-z0-9\.]+)?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    location ~* "^/[a-z]{2}((-[a-z]{1,3})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }

    ### decode list absoluto 32, 16
    location ~* "^/[a-z]{2}(~|\+)([a-z0-9,\{\}\.]+)$" {
        rewrite "(?i)^/.+" /scientific/ break;
    }

    location ~* "^/scientific_full/[a-z]{2}(~|\+)([a-z0-9,\{\}\.]+)$" {
        rewrite "(?i)^/.+" /scientific_full/ break;
    }

    location ~* "^/geo:(ghs:|olc:)?\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?(/base16(h|h1c)?)?(/grid(2|4|8|16|32))?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    ### ghs , olc
    location ~* "^(/scientific_full)?(/[a-z]{2}((-[a-z]{1,3}-[a-z\.]+))?)?/geo:((ghs:([0123456789BCDEFGHJKMNPQRSTUVWXYZ]+))|(olc:(([23456789CFGHJMPQRVWX]+0*){1,8}\+([23456789CFGHJMPQRVWX]+)?)))$" {
        rewrite "(?i)^/geo.+" /logistic/ break;
        rewrite "(?i)^/[a-z]{2}/.+" /scientific/ break;
        rewrite "(?i)^/[a-z]{2}\-.+" /logistic/ break;
        rewrite "(?i)^/scientific_full.+" /scientific_full/ break;
    }

    location ~* "^/geo:iso_ext:([a-z]{2}((-[a-z0-9]+){0,2}))$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    ### (urn|geo):lex
    location ~* "^/(urn|geo):lex:([a-z]{2}(;[a-z0-9\.]+)?(;[a-z0-9\.]+)?)$" {
        rewrite "(?i)^/.+" /view_lex/ break;
    }

    location ~ ^/?[RrWwNn]?[0-9]+$ {
        rewrite ^/?[Rr]?([0-9]+)$ https://www.openstreetmap.org/relation/$1  permanent;
        rewrite ^/?[Ww]?([0-9]+)$ https://www.openstreetmap.org/way/$1       permanent;
        rewrite ^/?[Nn]?([0-9]+)$ https://www.openstreetmap.org/node/$1      permanent;
        #ok working - proxy_pass  https://www.openstreetmap.org;
        #return 301 https://www.openstreetmap.org;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php-fpm.sock;
    }
} # \server

# TEST
server {
    server_name test.osm.codes www.test.osm.codes test.afa.codes www.test.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    root /var/www/test.osm.codes/;
    index index.php index.html index.htm;
    access_log /var/log/nginx/test.osm.codes.access_log;
    error_log  /var/log/nginx/test.osm.codes.error.log;

    # schema api, deve migrar para api.test.osm.codes
    ## return csv
    location /_sql.csv {
        rewrite /_sql.csv/(.*) /$1 break;

        proxy_set_header Accept 'text/csv';
        proxy_pass http://test_backend;
    }

    ## return json default postgrest
        location /_sql {
        rewrite ^/_sql/(.*) /$1 break;

        proxy_pass http://test_backend;
    }

    # encode logistics
    location ~* "^/geo:\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json(/[a-z]{2}-[a-z0-9]{1,3}-[a-z0-9]+)?$" {
        ### sem grid
        rewrite "^/(geo:.*);(u=.*)\.json$"      "/rpc/osmcode_encode?uri=$1%3B$2&grid=0" break;
        rewrite "^/(geo:.*)\.json$"             "/rpc/osmcode_encode?uri=$1&grid=0" break;
        rewrite "^/(geo:.*);(u=.*)\.json/(.+)$" "/rpc/osmcode_encode_postal?uri=$1%3B$2&grid=0&p_isolabel_ext=$3" break;
        rewrite "^/(geo:.*)\.json/(.+)$"        "/rpc/osmcode_encode_postal?uri=$1&grid=0&p_isolabel_ext=$2" break;
        proxy_pass http://test_backend;
    }

    # encode scientific
    location ~* "^/geo:\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json/base16(h|h1c)?(/grid(2|4|8|16|3|5|9|17))?(/[a-z]{2})?$" {
        # com grid
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/grid(\d+)$"      "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=$4" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/grid(\d+)$"             "/rpc/osmcode_encode_scientific?uri=$1&grid=$3" break;
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/grid(\d+)/(.+)$" "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=$4&p_isolabel_ext=$5" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/grid(\d+)/(.+)$"        "/rpc/osmcode_encode_scientific?uri=$1&grid=$3&p_isolabel_ext=$4" break;

        # sem grid
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?$"                "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=0" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?$"                       "/rpc/osmcode_encode_scientific?uri=$1&grid=0" break;
        rewrite "^/(geo:.*);(u=.*)\.json/base16(h|h1c)?/(.+)$"           "/rpc/osmcode_encode_scientific?uri=$1%3B$2&grid=0&p_isolabel_ext=$4" break;
        rewrite "^/(geo:.*)\.json/base16(h|h1c)?/(.+)$"                  "/rpc/osmcode_encode_scientific?uri=$1&grid=0&p_isolabel_ext=$3" break;

        proxy_pass http://test_backend;
    }

    # decode
    location ~* "^/geo:afa:([a-z]{2})(~|\+)([a-z0-9,\{\}\.]+)\.json$" {
        rewrite "(?i)^/geo:afa:(BR|UY)\+(.*)\.json$"     /rpc/osmcode_decode_scientific_absolute?p_code=$2&p_iso=$1&p_base=18 break; # scientific absoluto 16h1c
        rewrite "(?i)^/geo:afa:([a-z]{2})\+(.*)\.json$"  /rpc/osmcode_decode_scientific_absolute?p_code=$2&p_iso=$1&p_base=16 break; # scientific absoluto 16h
        rewrite "(?i)^/geo:afa:([a-z]{2})~(.*)\.json$"   /rpc/osmcode_decode_postal?p_code=$2&p_iso=$1 break;                        # logistic absoluto
        proxy_pass http://test_backend;
    }

    # decode logistic reduzido (CO-ANT-Itagui, CO-A-Itagui) divipola/ibgegeocodigo/cmcode
    location ~* "^/(geo:afa:)?(([a-z]{2}((-[a-z0-9]+){1,2})))(~|-)([a-z0-9]+)\.json$" {
        rewrite "(?i)^/(geo:afa:)?(.+)(~|-)(.+)\.json$" /rpc/osmcode_decode_postal?p_code=$4&p_iso=$2 break;
        proxy_pass http://test_backend;
    }

    # geo:iso_ext
    location ~* "^/(geo:iso_ext:)?([a-z]{2}((-[a-z0-9]+){0,2}))\.json(/cover(/base16h(1c)?)?)?$" {
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json$" /rpc/jurisdiction_geojson_from_isolabel?p_code=$2 break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover$"           /rpc/jurisdiction_coverage?p_iso=$2           break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover/base16h$"   /rpc/jurisdiction_coverage?p_iso=$2&p_base=16 break;
        rewrite "(?i)^/(geo:iso_ext:)?(.+)\.json/cover/base16h1c$" /rpc/jurisdiction_coverage?p_iso=$2&p_base=18 break;
        proxy_pass http://test_backend;
    }

    # geo:iso_ext2
    location ~* "^/(geo:iso_ext2:)?([a-z]{2}((-[a-z0-9]+){0,2}))\.json$" {
        rewrite "(?i)^/(geo:iso_ext2:)?(.+)\.json$" /rpc/jurisdiction_geojson_from_isolabel2?p_code=$2 break;
        proxy_pass http://test_backend;
    }

    # geo:co-divipola|br-geocodigo
    location ~* "^/(geo:(co-divipola|br-geocodigo|cm-code):[0-9]+)\.json(/cover(/base16h(1c)?)?)?$" {
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json$"                 /rpc/jurisdiction_geojson_from_isolabel?p_code=$1$3 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover$"           /rpc/jurisdiction_coverage?p_iso=$1$3 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover/base16h$"   /rpc/jurisdiction_coverage?p_iso=$1$3&p_base=16 break;
        rewrite "(?i)^/geo:((co|br|cm)-).+:([0-9]+)\.json/cover/base16h1c$" /rpc/jurisdiction_coverage?p_iso=$1$3&p_base=18 break;
        proxy_pass http://test_backend;
    }

    # (urn|geo):lex
    location ~* "^/(urn|geo):lex:([a-z]{2}(;[a-z0-9\.]+)?(;[a-z0-9\.]+)?)\.json(/cover/base16h(1c)?)?$" {
        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z\.]+)\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3%3B$4  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json$"
            /rpc/jurisdiction_geojson_from_isolabel?p_code=$2%3B$3%3B$4  break;


        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z0-9\.]+)\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=16  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json/cover/base16h$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=16  break;


        rewrite "(?i)^/(urn|geo):lex:([a-z]{2})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9]{2});([a-z0-9\.]+)\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,})\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3&p_base=18  break;

        rewrite "(?i)^/(urn|geo):lex:([a-z]{2});([a-z0-9\.]{3,});([a-z0-9\.]+)?\.json/cover/base16h1c$"
            /rpc/jurisdiction_coverage?p_iso=$2%3B$3%3B$4&p_base=18  break;

        proxy_pass http://test_backend;
    }

    # ENCODE OLC|GHS
    location ~* "^/geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?\.json$" {

        rewrite "^/(geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*);(u=\d+\.?\d*)\.json$"
            "/rpc/$2_encode?uri=$1%3B$3" break;

        rewrite "^/(geo:(olc|ghs):\-?\d+\.?\d*,\-?\d+\.?\d*)\.json$"
            "/rpc/$2_encode?uri=$1" break;

        proxy_pass http://test_backend;
    }

    # DECODE GHS
    location ~* "^/geo:ghs:([0123456789BCDEFGHJKMNPQRSTUVWXYZ]+).json$" {
        rewrite "(?i)^/geo:ghs:(.*).json$" "/rpc/ghs_decode?code=$1" break;
        proxy_pass http://test_backend;
    }

    # DECODE OLC
    location ~* "^/geo:olc:(([23456789CFGHJMPQRVWX]+0*){1,8}\+([23456789CFGHJMPQRVWX]+)?).json$" {
        rewrite "(?i)^/geo:olc:([^\.]+).json$" "/rpc/olc_decode?code=$1" break;
        proxy_pass http://test_backend;
    }

    ## leaflet
    ###
    location ~* "^/(BR|CM)((-[a-z]{2})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }
    location ~* "^/CO((-[a-z]{3})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }

    ### reduzido divipola/ibgegeocodigo 32
    location ~* "^/(geo:)?(BR|CM|CO|UY)((-[a-z0-9]{2,})(-[a-z0-9]{2,})?)((~|-)[a-z0-9\.]+)?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    location ~* "^/[a-z]{2}((-[a-z0-9]{3,}){1,2})((~|-)[a-z0-9\.]+)?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    location ~* "^/[a-z]{2}((-[a-z]{1,3})|(\+|\-|\~))?$" {
        rewrite "(?i)^/.+" /select/ break;
    }

    ### decode list absoluto 32, 16
    location ~* "^/[a-z]{2}(~|\+)([a-z0-9,\{\}\.]+)$" {
        rewrite "(?i)^/.+" /scientific/ break;
    }

    location ~* "^/scientific_full/[a-z]{2}(~|\+)([a-z0-9,\{\}\.]+)$" {
        rewrite "(?i)^/.+" /scientific_full/ break;
    }

    location ~* "^/geo:(ghs:|olc:)?\-?\d+\.?\d*,\-?\d+\.?\d*(;u=\d+\.?\d*)?(/base16(h|h1c)?)?(/grid(2|4|8|16|32))?$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    ### ghs , olc
    location ~* "^(/scientific_full)?(/[a-z]{2}((-[a-z]{1,3}-[a-z\.]+))?)?/geo:((ghs:([0123456789BCDEFGHJKMNPQRSTUVWXYZ]+))|(olc:(([23456789CFGHJMPQRVWX]+0*){1,8}\+([23456789CFGHJMPQRVWX]+)?)))$" {
        rewrite "(?i)^/geo.+" /logistic/ break;
        rewrite "(?i)^/[a-z]{2}/.+" /scientific/ break;
        rewrite "(?i)^/[a-z]{2}\-.+" /logistic/ break;
        rewrite "(?i)^/scientific_full.+" /scientific_full/ break;
    }

    location ~* "^/geo:iso_ext:([a-z]{2}((-[a-z0-9]+){0,2}))$" {
        rewrite "(?i)^.*$" /logistic/ break;
    }

    ### (urn|geo):lex
    location ~* "^/(urn|geo):lex:([a-z]{2}(;[a-z0-9\.]+)?(;[a-z0-9\.]+)?)$" {
        rewrite "(?i)^/.+" /view_lex/ break;
    }

    location ~ ^/?[RrWwNn]?[0-9]+$ {
        rewrite ^/?[Rr]?([0-9]+)$ https://www.openstreetmap.org/relation/$1  permanent;
        rewrite ^/?[Ww]?([0-9]+)$ https://www.openstreetmap.org/way/$1       permanent;
        rewrite ^/?[Nn]?([0-9]+)$ https://www.openstreetmap.org/node/$1      permanent;
        #ok working - proxy_pass  https://www.openstreetmap.org;
        #return 301 https://www.openstreetmap.org;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php-fpm.sock;
    }
} # \server

# OLD: dl03t_main em :3103, redirecionando para test.afa.codes
server {
    server_name old.osm.codes www.old.osm.codes old.afa.codes www.old.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/old.osm.codes.access_log;
    error_log  /var/log/nginx/old.osm.codes.error.log;

    return 302 https://test.afa.codes$request_uri;
} # \server

server {
    server_name docs.osm.codes docs.afa.codes www.docs.osm.codes www.docs.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/docs.osm.codes.access_log;
    error_log  /var/log/nginx/docs.osm.codes.error.log;

    return 302 https://wiki.addressforall.org/doc/Documenta%C3%A7%C3%A3o_AFA.codes;
} # \server

server {
    server_name api.osm.codes api.afa.codes www.api.osm.codes www.api.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/api.osm.codes.access_log;
    error_log  /var/log/nginx/api.osm.codes.error.log;

    ## return jurisdiction to autocomplete
    location / {
        rewrite "(?i)^/jurisdiction_autocomplete/?$"
            /rpc/jurisdiction_autocomplete break;
        rewrite "(?i)^/jurisdiction_autocomplete/(([a-z]{2}(-[a-z]{1,3})?)(/[a-z]{2})?)$"
            /rpc/jurisdiction_autocomplete?p_code=$1 break;

        proxy_pass http://prod_backend;
    }
} # \server

server {
    server_name api.test.osm.codes api.test.afa.codes www.api.test.osm.codes www.api.test.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/api.test.osm.codes.access_log;
    error_log  /var/log/nginx/api.test.osm.codes.error.log;

    ## return jurisdiction to autocomplete
    location / {
        rewrite "(?i)^/jurisdiction_autocomplete/?$"
            /rpc/jurisdiction_autocomplete break;
        rewrite "(?i)^/jurisdiction_autocomplete/(([a-z]{2}(-[a-z]{1,3})?)(/[a-z]{2})?)$"
            /rpc/jurisdiction_autocomplete?p_code=$1 break;

        proxy_pass http://test_backend;
    }
} # \server

server {
    server_name git.osm.codes www.git.osm.codes git.afa.codes www.git.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/git.osm.codes.access_log;
    error_log  /var/log/nginx/git.osm.codes.error.log;

    location ~ ^/?.+ {
        rewrite ^/?licenses(/.*$|$) /ppKrauss/licenses/$1 break;
        rewrite ^/?(.*)$            /osm-codes/$1         break;
        proxy_pass http://github.com;
    }
} # \server

server {
    server_name git-site.osm.codes git-site.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/git-site.osm.codes.access_log;
    error_log  /var/log/nginx/git-site.osm.codes.error.log;

    location ~ ^/?.+ {
        rewrite ^/?(.*)$ /$1 break;
        proxy_pass http://osm-codes.github.io;
    }
} # \server

server {
    server_name git-raw.osm.codes www.git-raw.osm.codes git-raw.afa.codes www.git-raw.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/git-raw.osm.codes.access_log;
    error_log  /var/log/nginx/git-raw.osm.codes.error.log;

    location ~ ^/?.+ {
        rewrite ^/?licenses(/.*$|$) /ppKrauss/licenses/$1 break;
        rewrite ^/?(.*)$            /osm-codes/$1         break;
        proxy_pass https://raw.githubusercontent.com;
    }
} # \server

server { #OLC para comparar com plus.codes
    server_name olc.osm.codes www.olc.osm.codes olc.afa.codes www.olc.afa.codes;
    listen 443 ssl http2;
    include /etc/nginx/ssl.conf;
    access_log /var/log/nginx/olc.osm.codes.access_log;
    error_log  /var/log/nginx/olc.osm.codes.error.log;
    index  index.php index.html index.htm;

    location / {
            try_files $uri $uri/ @resolver;
    }
    location  @resolver {
        rewrite "^/?([^/]+?)(/\.[a-zA-z]+)?$"
        /index.php?q=$1&ext=$2&accept=$http_accept last;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php-fpm.sock;
    }
} # \server
